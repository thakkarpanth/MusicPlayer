[{"/home/ktk/MusicPlayer/src/reportWebVitals.js":"1","/home/ktk/MusicPlayer/src/components/LibrarySong.js":"2","/home/ktk/MusicPlayer/src/App.js":"3","/home/ktk/MusicPlayer/src/components/Player.js":"4","/home/ktk/MusicPlayer/src/util.js":"5","/home/ktk/MusicPlayer/src/components/nav.js":"6","/home/ktk/MusicPlayer/src/components/Song.js":"7"},{"size":362,"mtime":1610208622256,"results":"8","hashOfConfig":"9"},{"size":1090,"mtime":1610208622256,"results":"10","hashOfConfig":"9"},{"size":2276,"mtime":1610208838511,"results":"11","hashOfConfig":"9"},{"size":3406,"mtime":1610208622256,"results":"12","hashOfConfig":"9"},{"size":171,"mtime":1610208622256,"results":"13","hashOfConfig":"9"},{"size":457,"mtime":1610208622256,"results":"14","hashOfConfig":"9"},{"size":322,"mtime":1610208622256,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"6ynyp0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ktk/MusicPlayer/src/reportWebVitals.js",[],["33","34"],"/home/ktk/MusicPlayer/src/components/LibrarySong.js",["35"],"import React from 'react';\nimport {playAudio} from '../util';\nconst LibrarySong = ({setSongs , isPlaying , audioRef , id , songs , setCurrentSong , song}) => {\n\n    const  songSelectHandler = async () => {\n        const selectedSong =  songs.filter((state) => state.id === id);\n        console.log(selectedSong);\n       \n\n        const newSongs = songs.map((song) => { if(song.id === id){\n            return {\n                ...song , active : true , \n            }\n        }\n        else{\n            return {\n                ...song , active : false \n            }\n        }\n         \n     })\n\n        setSongs(newSongs);\n        setCurrentSong(selectedSong[0]);\n      \n        playAudio(isPlaying , audioRef);\n    }   \n    return(\n        <div onClick= {songSelectHandler}  className = {`library-song ${song.active ? 'selected' : \"\"}`}>\n            <img  alt = {song.name} src={song.cover} alt=\"\"/>\n            <div className=\"song-description\">\n            <h3>{song.name}</h3>\n            <h4>{song.artist}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default LibrarySong ; ","/home/ktk/MusicPlayer/src/App.js",[],["36","37"],"/home/ktk/MusicPlayer/src/components/Player.js",["38"],"/home/ktk/MusicPlayer/src/util.js",[],"/home/ktk/MusicPlayer/src/components/nav.js",[],"/home/ktk/MusicPlayer/src/components/Song.js",["39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":30,"column":54,"nodeType":"46","endLine":30,"endColumn":60},{"ruleId":"40","replacedBy":"47"},{"ruleId":"42","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},{"ruleId":"44","severity":1,"message":"45","line":7,"column":68,"nodeType":"46","endLine":7,"endColumn":74},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["53"],["54"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]